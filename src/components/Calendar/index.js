import React from "react";
import moment from "moment";
import DayPicker, { DateUtils } from "react-day-picker";
import DayPickerInput from "react-day-picker/DayPickerInput";

import "react-day-picker/lib/style.css";

const DAY_FORMAT = "DD/MM/YYYY";

const currentYear = new Date().getFullYear();
const fromMonth = new Date(currentYear, 0);
const toMonth = new Date(currentYear + 10, 11);

export default class Calendar extends React.Component {
  state = {
    selectedDay: undefined,
    isDisabled: false
  };

  handleDayClick = (selectedDay, modifiers) => {
    this.setState({
      selectedDay: selectedDay,
      isDisabled: modifiers.disabled
    });
  };

  render() {
    const { selectedDay, isDisabled } = this.state;
    const formattedDay = !!selectedDay
      ? moment(selectedDay).format(DAY_FORMAT)
      : "";
    const modifiers = {
      disabled: { daysOfWeek: [0, 6] }
    };

    const locale = "ru";

    const WEEKDAYS_LONG = {
      ru: [
        "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
        "–í—Ç–æ—Ä–Ω–∏–∫",
        "–°—Ä–µ–¥–∞",
        "–ß–µ—Ç–≤–µ—Ä–≥",
        "–ü—è—Ç–Ω–∏—Ü–∞",
        "–°—É–±–±–æ—Ç–∞"
      ]
    };
    const WEEKDAYS_SHORT = { ru: ["–í—Å", "–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±"] };
    const MONTHS = {
      ru: [
        "–Ø–Ω–≤–∞—Ä—å",
        "–§–µ–≤—Ä–∞–ª—å",
        "–ú–∞—Ä—Ç",
        "–ê–ø—Ä–µ–ª—å",
        "–ú–∞–π",
        "–ò—é–Ω—å",
        "–ò—é–ª—å",
        "–ê–≤–≥—É—Å—Ç",
        "–°–µ–Ω—Ç—è–±—Ä—å",
        "–û–∫—Ç—è–±—Ä—å",
        "–ù–æ—è–±—Ä—å",
        "–î–µ–∫–∞–±—Ä—å"
      ]
    };

    return (
      <div>
        <p>
          {!selectedDay && "ü§î Type or pick a valid day"}
          {selectedDay && isDisabled && "üò° This day is disabled"}
          {selectedDay && !isDisabled && `üòÑ You chose ${formattedDay}`}
        </p>
        <span>
          <DayPicker
            firstDayOfWeek={1}
            onDayClick={this.handleDayClick}
            months={MONTHS[locale]}
            weekdaysLong={WEEKDAYS_LONG[locale]}
            weekdaysShort={WEEKDAYS_SHORT[locale]}
            locale={locale}
            modifiers={modifiers}
            fromMonth={new Date(2017, 9)}
            toMonth={new Date(2017, 11)}
            showWeekNumbers
          />
        </span>
      </div>
    );
  }
}
